/* Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.
You must not use any built-in exponent function or operator.

Constraint
0 <= x <= 231 - 1 */

class Solution {
public:
    int mySqrt(int x) {
        if (x == 0) {
            return 0;
        }
        if (x == 1) {
            return 1;
        }
        int num = x / 2;
        const int eps = 1e-7;
        while ((num  - x / num) > eps) {
            num = (num + x / num) / 2;
        }
        return num;
    }
};
