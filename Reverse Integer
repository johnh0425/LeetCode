/* Given a signed 32-bit integer x, return x with its digits reversed. 
If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Constraints
-231 <= x <= 231 - 1 */

class Solution {
public:
    int reverse(int x) {
        if (x <= -2147483648) {
            return 0;
        }
        int count = 0;
        if (x < 0) {
            x = x * (-1);
            count++;
        }
        long reverse = 0;
        while (x > 0) {
            reverse = (reverse * 10) + (x  % 10);
            x = x / 10;
        }
        if (reverse > 2147483647) {
            return 0;
        }
        if (count > 0) {
            reverse = reverse * (-1);
        }
        return reverse;
    }
};
